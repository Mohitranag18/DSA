Problem Link: https://leetcode.com/problems/subsets/description/

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        generateSubsets(nums, 0, new ArrayList<>(), result);
        return result;
    }

    private void generateSubsets(int[] nums, int index, List<Integer> current, List<List<Integer>> result) {
        // Base case: when we reach the end of the array, add the current subset to result
        if (index == nums.length) {
            result.add(new ArrayList<>(current));
            return;
        }
        // Include the current element and move to the next
        current.add(nums[index]);
        generateSubsets(nums, index + 1, current, result);

        // Backtrack to remove the last element for the next iteration
        current.remove(current.size() - 1);
        // Exclude the current element and move to the next
        generateSubsets(nums, index + 1, current, result);  
    }
}